name: Build and Deploy job
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x]
        os: [ubuntu-latest]
        compile-os-arch: ["GOOS=linux GOARCH=amd64", "GOOS=linux GOARCH=386", "GOOS=linux GOARCH=arm64", "GOOS=linux GOARCH=arm", "GOOS=windows GOARCH=amd64", "GOOS=windows GOARCH=386"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run build script
        run: ${{ matrix.compile-os-arch }} ./build.sh
      - name: Upload build artifacts
        if: ${{ matrix.go-version == '1.15.x' }}
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifact
          path: ./bin/fumeping*
  docker_build_deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/mmichaelb/fumeping/fumeping
          tag-sha: true
      - name: Create bin directory
        run: mkdir -p ./bin/
      - name: Download required artifacts
        uses: actions/download-artifact@v2
        with:
          name: BuildArtifact
          path: ./bin/
      - name: Filter out correct binary
        run: mv ./bin/fumeping-*-linux-amd64 ./bin/fumeping
      - name: Make binary executable
        run: chmod +x ./bin/fumeping
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          push: ${{ github.event_name == 'push' }}
          context: .
          file: ./build/package/Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
